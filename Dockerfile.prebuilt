# Optimized Dockerfile for pre-built React app
# Use this when React app is already built locally

# Backend build stage
FROM node:16-alpine AS backend-build

# Set working directory for backend
WORKDIR /app/backend

# Copy backend package files
COPY Backend/package*.json ./

# Install backend dependencies (production only)
RUN npm ci --only=production

# Copy backend source code
COPY Backend/ ./

# Final stage - Production with nginx
FROM nginx:alpine

# Install Node.js for backend
RUN apk add --no-cache nodejs npm

# Create app directory
WORKDIR /app

# Copy backend from build stage
COPY --from=backend-build /app/backend ./backend

# Copy pre-built React files
COPY Frontend/build /usr/share/nginx/html

# Copy nginx configuration
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Create nginx run directory
RUN mkdir -p /run/nginx

# Create startup script
RUN echo '#!/bin/sh' > /start.sh && \
    echo 'echo "Starting nginx..."' >> /start.sh && \
    echo 'nginx -g "daemon off;" &' >> /start.sh && \
    echo 'echo "Starting backend..."' >> /start.sh && \
    echo 'cd /app/backend && node index.js' >> /start.sh && \
    chmod +x /start.sh

# Expose port
EXPOSE 80

# Start both services
CMD ["/start.sh"]
